type Query {
    getProducts: [Product]
    getWarehouses: [Warehouse]
    getTransactions(warehouseId: String!): [Transaction]
}

type Mutation {
    createProduct(productName: String!,productType: ProductType!, sizePerUnit: Int!): Product
    createTransactions(warehouseId: String!, transactions: [TransactionInput]!): String
}

type Transaction {
    id: String,
    product_id: String,
    amount: Float
}

type Product {
    id: String,
    productName: String!,
    productType: ProductType!
    sizePerUnit: Int!
}

input TransactionInput {
    productId: String,
    amount: Float
}

type Warehouse {
    id: String,
    code: String,
    hazardous: Boolean,
    capacity: Int,
    occupied: Float
}

enum ProductType {
    HAZARDOUS,
    STANDARD
}